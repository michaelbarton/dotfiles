#!/usr/bin/env ruby
 
require 'fileutils'
 
class SpecFinder
  attr_reader :prefix
  def initialize(prefix)
    @prefix = prefix
  end
 
 
  def name_to_file(name)
    "#{prefix}/#{name}_spec.rb"
  end
 
  def file_to_name(file)
    file.sub(%r{^#{Regexp.escape(prefix)}/}, '').sub(%r{_spec\.rb$}, '')
  end
 
  def spec_files
    @spec_files ||= Dir["#{prefix}/**/*_spec.rb"]
  end
 
  def spec_names
    @spec_names ||= spec_files.collect {|file| file_to_name(file) }
  end
 
  def run(specs)
    if specs.empty?
      if spec_files.empty?
        puts "Nothing to do."
      else
        run(spec_files)
      end
    else
      specs = specs.collect {|spec| force_spec_file(spec) }
      command = command_to_run(specs)
      puts command
      exec command
    end
  end
 
  def list
    puts spec_names.sort.join("\n")
  end
 
  private
 
  def force_spec_file(spec)
    if spec_files.include?(spec)
      spec
    elsif spec_names.include?(spec)
      name_to_file(spec)
    else
      raise "No such spec: #{spec.inspect}"
    end
  end
 
  def command_to_run(files)
    files_string = files.join(" ")
    "spec -cfs #{files_string}"
  end
end
 
list = ARGV.delete('-l') || ARGV.delete('--list')
prefix = ARGV.shift
prefix = prefix ? "spec/#{prefix}" : 'spec'
finder = SpecFinder.new(prefix)
specs = ARGV.dup
 
if list
  finder.list
else
  finder.run(specs)
end

